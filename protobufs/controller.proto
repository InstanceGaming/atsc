syntax = "proto3";


import "google/protobuf/timestamp.proto";
import "protobufs/field_output.proto";
import "protobufs/signal.proto";
import "protobufs/phase.proto";


package atsc.rpc.controller;


message ControllerMetadataRequest {}
message ControllerMetadataReply {
  string version = 10;

  bool supports_time_freeze = 30;
  bool supports_time_scaling = 31;
  bool supports_coordination = 32;
  bool supports_scheduling = 33;
  bool supports_dimming = 34;

  uint32 supported_field_outputs = 50;
  uint32 supported_signals = 51;
  uint32 supported_phases = 52;
  uint32 supported_rings = 53;
  uint32 supported_barriers = 54;

  uint32 supported_inputs = 60;
}

message ControllerRuntimeInfoRequest {}
message ControllerRuntimeInfoReply {
  google.protobuf.Timestamp started_at = 1;
  uint64 run_seconds = 2;
  uint64 control_seconds = 3;

  bool freeze_time = 30;
  float time_scale = 31;
  bool coordinating = 32;
  bool on_schedule = 33;
  bool dimming = 34;

  uint32 enabled_field_outputs = 50;
  uint32 enabled_signals = 51;
  uint32 enabled_phases = 52;
  uint32 enabled_rings = 53;
  uint32 enabled_barriers = 54;

  uint32 enabled_inputs = 60;
}

message ControllerFieldOutputsRequest {}
message ControllerFieldOutputsReply {
  repeated atsc.rpc.field_output.FieldOutput field_outputs = 1;
}

message ControllerPhasesRequest {}
message ControllerPhasesReply {
  repeated atsc.rpc.phase.Phase phases = 1;
}

message ControllerSignalsRequest {}
message ControllerSignalsReply {
  repeated atsc.rpc.signal.Signal signals = 1;
}

service Controller {
  rpc get_metadata(ControllerMetadataRequest) returns (ControllerMetadataReply) {}
  rpc get_runtime_info(ControllerRuntimeInfoRequest) returns (ControllerRuntimeInfoReply) {}
  rpc get_field_outputs(ControllerFieldOutputsRequest) returns (ControllerFieldOutputsReply) {}
  rpc get_signals(ControllerSignalsRequest) returns (ControllerSignalsReply) {}
  rpc get_phases(ControllerPhasesRequest) returns (ControllerPhasesReply) {}
}
